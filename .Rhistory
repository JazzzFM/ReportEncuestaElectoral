username = 'root',
password = '9Blw33caY',
port = 3306
)
# packages
library(dplyr)
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
# settings
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
source("R/graficas_formulario.R")
graficas_formulario.R
ggCantidadBloquesMax <- function(BD){
tot <- BD %>% nrow()
mid <- round(tot/2)
aux_2 <- BD %>%
select(cantidadBloques) %>% max()
aux <- BD %>%
select(cantidadBloques) %>%
filter(cantidadBloques == aux_2) %>%
mutate(color= case_when(cantidadBloques >= mid ~"#C0D294", T ~"#9D1742"))
Graph <- aux %>% ggplot() +
annotate(x=1, xend=1, y=0, yend=10, size=10*1.1, color = aux$color,
geom = "segment", alpha=.5)+
geom_segment(aes(x = 1, y = 0, xend = 1, yend = aux_2),
color = aux$color,
lineend = "round", linejoin = "round",
size =  10, arrow = arrow(length = unit(0, "inches"))  ) +
geom_text(aes(label = paste0(round(cantidadBloques, digits = 1)), "%"), color = aux$color,
x=-5, y=5, size=60/.pt, fontface="bold")+
coord_polar(theta = "y") +
scale_x_continuous(limits = c(-5,2)) +
scale_y_continuous(limits = c(0, 10))+
theme_minimal() +
labs(title = "Cantidad máxima de bloques") +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
text = element_text(family = "Open Sans", size = 20),
plot.title = element_text(size = 22,
colour =  "#751438",
hjust = 0),
axis.line.x = element_blank(),
panel.grid.major.y = element_blank(),
legend.title = element_blank(),
legend.position = "none"
)
return(Graph)
}
# packages
library(dplyr)
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
# settings
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
source("R/graficas_formulario.R")
ggCantidadBloquesMax <- function(BD){
tot <- BD %>% nrow()
mid <- round(tot/2)
aux_2 <- BD %>%
select(cantidadBloques) %>% max()
aux <- BD %>%
select(cantidadBloques) %>%
filter(cantidadBloques == aux_2) %>%
mutate(color= case_when(cantidadBloques >= mid ~"#C0D294", T ~"#9D1742"))
Graph <- aux %>% ggplot() +
annotate(x=1, xend=1, y=0, yend=10, size=10*1.1, color = aux$color,
geom = "segment", alpha=.5)+
geom_segment(aes(x = 1, y = 0, xend = 1, yend = aux_2),
color = aux$color,
lineend = "round", linejoin = "round",
size =  10, arrow = arrow(length = unit(0, "inches"))  ) +
geom_text(aes(label = paste0(round(cantidadBloques, digits = 1)), "%"), color = aux$color,
x=-5, y=5, size=60/.pt, fontface="bold")+
coord_polar(theta = "y") +
scale_x_continuous(limits = c(-5,2)) +
scale_y_continuous(limits = c(0, 10))+
theme_minimal() +
labs(title = "Cantidad máxima de bloques") +
theme(panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
text = element_text(family = "Open Sans", size = 20),
plot.title = element_text(size = 22,
colour =  "#751438",
hjust = 0),
axis.line.x = element_blank(),
panel.grid.major.y = element_blank(),
legend.title = element_blank(),
legend.position = "none")
return(Graph)
}
source("R/graficas_formulario.R")
# packages
library(dplyr)
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
# settings
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
procesamiento("nivelClaridad")
ggClaridadObjetivos(DB)
procesamiento("nivelClaridad") %>%
ggClaridadObjetivos(DB)
DB <- procesamiento("nivelClaridad")
ggClaridadObjetivos(DB)
knitr::opts_chunk$set(
echo = FALSE,
fig.showtext = TRUE,
message = FALSE,
warning = FALSE
)
options(tinytex.verbose = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
nw_db_con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "data/Northwind_small.sqlite")
DB <- procesamiento("nivelClaridad")
ggClaridadObjetivos(DB)
warnings()
# packages
library(dplyr)
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
# settings
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
DB_1 <- procesamiento("nivelClaridad")
ggClaridadObjetivos(DB_1)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
# settings
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
DB_1 <- procesamiento("nivelClaridad")
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
DB_1 <- procesamiento("nivelClaridad")
ggClaridadObjetivos(DB_1)
ggClaridadObjetivos(DB_1)
ggClaridadObjetivos(DB_1)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
DB_1 <- procesamiento("nivelClaridad")
ggClaridadObjetivos(DB_1)
DB <- procesamiento("nivelClaridad")
ggClaridadObjetivos(DB)
DB <- procesamiento("operacionalizacion")
ggOperacionalizacion(DB)
DB <- procesamiento("poblacionObjetivo")
ggPoblacionObjetivo(DB)
\includegraphics[width=1.0\linewidth]{figures/uno.png}
procesamiento("cantidadBloques") %>% ggCantidadBloquesMin()
procesamiento("cantidadBloques") %>% ggCantidadBloquesMin()
procesamiento("cantidadBloques") %>% ggCantidadBloquesMin()
procesamiento("cantidadBloques") %>% ggCantidadBloquesMin()
procesamiento("cantidadBloques") %>% ggCantidadBloquesModa()
procesamiento("cantidadBloques") %>% ggCantidadBloquesMax()
ggbarrasLevantamiento(listadoDisMuestral %>% collect())
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
ggbarrasLevantamiento(listadoDisMuestral %>% collect())
ggbarrasLevantamiento(formDisMuestralBd %>% collect())
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral = leerBd(pool, formDisMuestralBd), #%>% collect(),
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral = leerBd(pool, formDisMuestralBd), #%>% collect(),
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral = leerBd(pool, formDisMuestralBd) #%>% collect(),
listadoDisMuestral <- tbl(pool, formDisMuestralBd) #%>% collect(),
ggbarrasLevantamiento(listadoDisMuestral %>% collect())
listadoDisMuestral <- tbl(pool, formDisMuestralBd) %>% collect(),
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral <- tbl(pool, formDisMuestralBd) %>% collect(),
listadoDisMuestral <- tbl(pool, formDisMuestralBd) %>% collect()
ggbarrasLevantamiento(listadoDisMuestral)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
library(ggfittext)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
procesamiento("cantidadBloques") %>% ggCantidadBloquesMax()
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral <- tbl(pool, formDisMuestralBd) %>% collect()
ggbarrasLevantamiento(listadoDisMuestral)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
library(ggfittext)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral <- tbl(pool, formDisMuestralBd) %>% collect()
WordCldTV(listadoDisMuestral)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
library(ggfittext)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral <- tbl(pool, formDisMuestralBd) %>% collect()
WordCldTV(listadoDisMuestral)
WordCldTV(listadoDisMuestral)
library(ggwordcloud)
WordCldTV(listadoDisMuestral)
ggAleatoria(listadoDisMuestral)
# packages
library(knitr)
library(xtable)
library(tidyverse)
library(DBI)
library(kableExtra)
library(lubridate)
library(scales)
library(showtext)
library(ggfittext)
library(ggwordcloud)
# settings
font.add("opensans", regular = "OpenSans-Regular.ttf")
showtext.auto()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
source("R/graficas_formulario.R")
# Data Base Connection
pool <- pool::dbPool(
drv = RMariaDB::MariaDB(),
dbname = "db_gp",
host = 'mysql.cduzrgqgkfht.us-east-2.rds.amazonaws.com',
username = 'root',
password = '9Blw33caY',
port = 3306
)
procesamiento <- function(column){
DB <- DBI::dbGetQuery(pool, paste(
"SELECT",
as.character(column),
"FROM tElectoralTest_investigacion_cuestionario;",
sep = " "))
return(DB)
}
formDisMuestralBd <- "tElectoralTest_investigacion_disenoMuestral"
listadoDisMuestral <- tbl(pool, formDisMuestralBd) %>% collect()
ggNoaleatoria(listadoDisMuestral)
ggUnidadMuestral(listadoDisMuestral)
ggUnidadMuestral(listadoDisMuestral)
ggUnidadMuestral(listadoDisMuestral)
ggPoliEtapa(listadoDisMuestral)
ggEstratificada(bd$listadoDisMuestral %>% collect())
ggEstratificada(listadoDisMuestral)
ggConglomerados(listadoDisMuestral)
ggMinNivelConfianza(listadoDisMuestral)
ggModaNivelConfianza(listadoDisMuestral)
ggMaxNivelConfianza(listadoDisMuestral)
ggEstratificada(listadoDisMuestral)
procesamiento("cantidadBloques") %>% ggCantidadBloquesMin()
procesamiento("cantidadBloques") %>% ggCantidadBloquesMin()
```{r, out.width="\\textwidth", fig.width=2cm,fig.height=3.0,fig.asp=NA}
